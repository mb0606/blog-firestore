{"version":3,"sources":["PostForm.jsx","PostList.jsx","PostModal.jsx","App.js","index.js"],"names":["PostForm","props","addPostToList","useState","checked","setChecked","title","setTitle","body","setBody","Form","onSubmit","event","preventDefault","id","String","Math","floor","random","Check","type","label","onChange","prevState","Group","Control","placeholder","value","target","Label","as","rows","Button","variant","PostList","posts","deletePost","displayPostInModal","style","paddingTop","CardColumns","map","post","index","Card","Body","onClick","Title","toUpperCase","Text","slice","Footer","testAlign","padding","xmlns","width","height","fill","className","viewBox","d","fill-rule","PostModal","postId","show","closePostModal","setPost","console","log","useEffect","fetch","then","response","json","Modal","onHide","Header","closeButton","Spinner","animation","App","setPosts","loading","setLoading","setShow","setPostId","Container","Row","marginTop","Col","xs","lg","textAlign","newPost","prevPosts","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd119f40.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Card } from \"react-bootstrap\";\n\nexport default function PostForm(props) {\n  const { addPostToList } = props;\n  const [checked, setChecked] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    addPostToList({\n      id: `m${String(Math.floor(Math.random() * 1000 + 100))}`,\n      title,\n      body,\n    });\n    setTitle(\"\");\n    setBody(\"\");\n    setChecked(false);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Check\n        type=\"checkbox\"\n        label=\"Add Post\"\n        checked={checked}\n        onChange={() => setChecked((prevState) => !prevState)}\n      />\n      {checked && (\n        <>\n          <Form.Group>\n            <Form.Control\n              type=\"input\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Post Body</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={10}\n              value={body}\n              onChange={(event) => setBody(event.target.value)}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </>\n      )}\n      <hr></hr>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Card, Button, CardColumns, Modal } from \"react-bootstrap\";\n\nexport default function PostList(props) {\n  const { posts, deletePost, displayPostInModal } = props;\n\n  return (\n    <div style={{ paddingTop: 20 }}>\n      <CardColumns>\n        {posts &&\n          posts.map((post, index) => (\n            <Card key={post.id}>\n              <Card.Body onClick={() => displayPostInModal(post.id)}>\n                <Card.Title>{post.id}</Card.Title>\n                <Card.Title>{post.title.toUpperCase()}</Card.Title>\n                <Card.Text>{`${post.body.slice(0, 20)}...`}</Card.Text>\n              </Card.Body>\n              <Card.Footer style={{ testAlign: \"right\", padding: 5 }}>\n                <Button variant=\"danger\" onClick={() => deletePost(post.id)}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    fill=\"currentColor\"\n                    className=\"bi bi-trash\"\n                    viewBox=\"0 0 16 16\"\n                  >\n                    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                    <path\n                      fill-rule=\"evenodd\"\n                      d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n                    />\n                  </svg>\n                </Button>\n              </Card.Footer>\n            </Card>\n          ))}\n      </CardColumns>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Spinner } from \"react-bootstrap\";\n\nexport default function PostModal(props) {\n  const { postId, show, closePostModal } = props;\n  const [post, setPost] = useState(null);\n  console.log(\"when \");\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`)\n      .then((response) => response.json())\n      .then((json) => setPost(json));\n  }, [postId, setPost]);\n\n  if (!post) {\n    return <Spinner animation=\"border\" />;\n  }\n\n  return (\n    <div>\n      <Modal show={show} onHide={closePostModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{post?.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{post?.body}</Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport PostForm from \"./PostForm\";\nimport PostList from \"./PostList\";\nimport PostModal from \"./PostModal\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const [postId, setPostId] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((response) => response.json())\n      .then((json) => {\n        setPosts(json);\n        setLoading(false);\n      });\n  }, [setLoading, setPosts]);\n\n  function addPostToList(newPost) {\n    setPosts([newPost, ...posts]);\n  }\n  function deletePost(postId) {\n    setPosts((prevPosts) => prevPosts.filter((post) => post.id !== postId));\n  }\n  function displayPostInModal(postId) {\n    setPostId(postId);\n    setShow(true);\n  }\n  function closePostModal() {\n    setShow(false);\n  }\n\n  if (loading) {\n    return <Spinner animation=\"border\" />;\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\" style={{ marginTop: 60 }}>\n        <Col xs lg=\"12\">\n          <h1 style={{ textAlign: \"center\" }}>Blog App</h1>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\" style={{ marginTop: 20 }}>\n        <Col xs lg=\"12\">\n          <PostForm addPostToList={addPostToList} />\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\" style={{ marginTop: 20 }}>\n        <Col xs lg=\"12\">\n          <PostList\n            posts={posts}\n            deletePost={deletePost}\n            displayPostInModal={displayPostInModal}\n          />\n        </Col>\n      </Row>\n      <PostModal show={show} closePostModal={closePostModal} postId={postId} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}